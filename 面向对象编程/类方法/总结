总结：
正常逻辑上类方法发应当只能被类对象调用，它只属于类本身所有，实例方法只能被实例调用，它只属于类的单个实例拥有，静态方法两者都能调用，它在类和实例间共享，python实现了一定的灵活性使得类方法和静态方法，都能够被实例和类二者调用
所以三者区别在于参数传递上的区别，实例方法隐含传的参数是类实例self，而类方法隐含传递的参数是类本身cls，而静态方法无隐含参数，主要为了类实例也可以直接调用静态方法


Python类中隐藏数据：
python中经常会看到类中定义的方法名前后有下划线的情况，这些表示的意思？
类中的方法名前后都有两个下划线，表示Python的内置方法，如__init__()
类中的方法名前面有两个下划线，表示python中的私有方法，类似于java中的private，不能在类外部调用(如_setId())
类中的属性前有两个下划线表示声明该属性为私有属性，不能在类的外部被使用或直接访问，如__name
