继承可以理解成类之间的类型和子类型关系
即一个派生类(derived class)继承基类(bass class)字段和方法，继承也允许把一个派生
类的对象作为一个基类对象对待

例如：
有这样一个设计，一个Cat类型的对象派生自Animals类，这是模拟"是一个(is-a)"关系（如：Cat是一个Animal）
继承基本语法：
class 派生类名(基类名1[,基类名2]):
    'Optional class documentation string'
        class_suite
基类名写在括号里，基本类是在类定义的时候，在元组之中指明的，如果在继承元组中列了一个以上的基类，那么它就被称作“多重继承”

继承的特点：
在继承中基类的构造(__init__()方法)不会被自动调用，它需要在其他派生类的构造方法中专门调用，
即子类不会继承基类的构造方法
在调用基类的方法时，需要加上基类的类名前缀，且需要带上self参数变量，区别于类中调用普通函数时
并不需要带上self参数
Python总是首先找到对应类型的方法，如果它不能在派生类中找到对应的方法，它才开始到基类中逐个查找。
子类只继承父类所有公有的属性和方法，并且也可以在子类中通过父类名来调用，而对于私有的属性和方法，
子类时不进行继承的，因此在子类中是无法通过父类名来访问的


