我们知道，子类继承基类后，在子类定义了自己的构造方法后，基类的构造方法不会被主动继承，
所以基类构造函数中初始化的一些属性在子类中是不具有的，但是想用这些属性，怎么办？
两种方法：
1、在子类构造方法中再写一次这些属性
2、直接调用父类的构造方法完成
子类调用基类的构造函数有两种方法，其基本语法如下：
1、super(subclassName,self).__init__([parameter1[,parameter2...]])
2、superclassName.__init__(self,[parameter1[,parameter2...]])
注意：
两次参数列表中的self参数都是必不可少的，如果基类的构造方法中有除了self参数以外的别的参数
，调用时，也必须传入同等数量、同等类型的参数
当子类不定义自己的构造方法时，默认会自动调用父类的构造方法
Python中的super函数只能在构造方法中使用


子类调用基类方法：
子类调用父类的方法有两种方式：
1、Parent.parentMethod(self)
2、self.parentMethod()
第一种是直接用父类的类名.方法名去调用父类的方法，但需要注意的是，这种调用方法
必须将self作为参数传进去并且作为第一个参数，表示指向这个类的实例本身，这种方法
多用于方法重写时

第二种是直接用self去调用父类的方法，为什么可以这样调用呢？
因为一旦子类继承了父类，那么子类就拥有父类所有的公有方法和属性，所以此时父类的方法
和属性就相当于子类自己了，所以可以直接用self去直接调用实例的方法，而不用再传入self参数了
