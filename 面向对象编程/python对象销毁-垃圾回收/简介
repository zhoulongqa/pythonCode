python使用了引用计数这一计数来追踪内存中的对象
在python内部记录着所有使用中的对象各有多少引用
一个内部跟踪变量，称为一个引用计数器
当对象被创建时，就创建了一个引用计数，当这个对象不再需要时，也就是说，这个对象引用计数
变为0时，它被垃圾回收，但是回收不是“立即”的，由解释器在适当的时机，将垃圾对象占用的
内存空间回收


垃圾回收机制不仅针对引用计数为0的对象，同样也可以处理循环引用的情况，循环引用指的是，
两个对象相互引用，但是没有其他变量引用他们，这种情况下，仅使用引用计数是不够的，python
的垃圾收集器实际上是一个引用计数器和一个循环垃圾收集器，作为引用计数的补充，垃圾收集器
也会留心被分配的总量很大(及未通过引用计数器销毁的那些)的对象，在这种情况下，解释器会暂停
下来，试图清理所有未引用的循环

析构函数__del__,__del__在对象销毁的时候被调用，当对象不再被使用时，__del__方法运行
