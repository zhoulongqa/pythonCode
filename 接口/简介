RESTful API
网络应用程序，分为前端和后端两个部分
前端设备：手机、平板、桌面电脑、其他专用设备
后端：服务器端

有一种统一的机制，方便不同的前端设备和后端设备进行通信-API构架
http协议：
超文本传输协议(http,HyperText Transfer Protocol)是互联网上应用最广泛的一种网络协议
一个是客户端和服务器端请求和应答的标准(TCP)
客户端是终端用户(web浏览器、网络爬虫或其他的工具)，服务器端是网站
由http客户端发起一个请求，建立一个到服务器指定端口(默认是80端口)的TCP连接，HTTP服务器则在哪个端口监听客户端发送过来的请求，一旦收到请求，服务器(向客户端)发回一个状态行，比如：HTTP/1.1 200ok，和（响应）消息，消息的消息体可能是请求的文件、错误信息、或者其他一些信息
HTTP协议的网页使用TCP而不是UDP的原因在于(打开)一个网页必须传送很多的数据，而TCP协议提供传输控制，按顺序组织数据，和纠正错误
HTTP协议的特点：
1.无连接：含义是限制每次连接只处理一个请求，服务器处理完客户的请求，并受到客户的应答后，即断开连接，采用这种方式可以节省传输时间
2.无状态：HTTP协议是无状态协议，是指对于事务处理没有记忆能力，缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快

HTTP协议连接的四个步骤：
一次HTTP操作称为一个事务，其工作过程分为四步：
1.首先客户机与服务器需要建立连接，只要单击某个超级链接，HTTP的工作就开始了
2.建立连接后，客户机发送一个请求给服务器，请求方式的格式：统一资源标识符(URL)、协议版本号，后面是其他信息包括请求修饰符、客户机信息和可能的内容
3、服务器接到请求后，给予相应的响应信息，其格式为一个状态行，包括信息的协议版本号、一个成功或错误的代码，后边是其他响应信息包括服务器信息、实体信息和可能的内容
4、客户端接服务器收服务器所返回的信息通过浏览器显示在用户的显示屏上，然后客户机与服务器端口连接

HTTP协议的请求和响应：
HTTP报文从客户机到服务器的请求和从服务器到客户机的响应构成。请求报文格式如下：
请求行--通用信息头--请求头--实体头--报文主体
Host:download.*******de
Accpet:*/*
Pragma:no-cache
Cache-Control:no-cache
User-Agent:Mozilla/4.04[en](Win95)
Range:bytes=554554-
应答报文格式如下：
状态行--通用信息头--响应头--实体头--报文主体
HTTP/1.0200ok
Date Mon 31 Dec200104:25:57GMT
Server:Apache/1.3.14(Unix)
Content-type:text/html
Last-modified Tue....
Etag
Content-length:
Content-range:bytes55


HTTP协议的状态码：
1xx：信息响应类，表示接收到请求并且继续处理
2xx：处理成功响应类，表示动作被成功接收、理解和接受
3xx：重定向响应类，为了完成指定的动作，必须接受进一步处理
4xx：客户端错误，客户请求包含语法错误或者不能正确执行
5xx：服务端错误，服务器不能正确执行一个正确的请求


RESTful API(http协议)的动作
get(select)：从服务器取出资源
post(create):从服务器新建一个资源
put
....




































