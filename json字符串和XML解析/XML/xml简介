XML指可扩展标记语言(Extensible Markup Language)
XML被设计用于结构化、存储和传输数据
XML是一种标记语言，很类似于html
xml没有像html那样具有预定义标签，需要程序员自定义标签
xml被设计为具有自我描述性，并且是W3c的标准

Python解析XML三种方法：
1、SAX(simple API for XML)
Python标准库中包含SAX解析器，SAX是用的是事件驱动模型，通过在解析XML过程中触发一个个的事件
并调用用户定义的回调函数来处理XML文件
解析的节本过程：
读到一个XML开始标签，就会开始一个事件，然后事件就会调用一系列的函数去处理一些事情，当读到一个
结束标签时，就会触发另一个事件，所以，我们写XML文档如果有格式错误的话，解析就会出错
这是一种流式处理，一边读一边解析，占用内存少，可以处理一些大的文件，但是把大文件读到缓存中缓存
起来就比较难，这样就会影响效率
2、DOM(Document Object Model)
DOM是Document Object Model的简称，它是以对象树来表示一个XML文档的方法，使用它的好处就是你可以
非常灵活的在对象中进行遍历
将XML数据在内存中解析成一个树，通过对树的操作来操作XML
由于DOM是将XML读取到内存，然后解析成一个树，如果要处理的XML文本比较大的话，就会很耗内存，所以
DOM一般偏向于处理一些小的XML，如处理一些配置文件
3、ElementTree(Object Model)
ElementTree就像一个轻量级的DOM，具有方便而友好的API，代码的可用性好、速度快、消耗内存少，可以认为
是对DOM的改进

注意：
DOM需要将XML数据映射到内存中的树，一是比较慢，二是比较耗内存，而SAX流式读取XML文件，比较快，占内存少，
但需要用户实现回调函数(handler)

xml.dom解析xml思路：
一个DOM的解析器在解析一个XML文档时，一次性读取整个文档，把文档中所有元素保存在内存中的一个树结构里，之后
利用DOM提供的不同函数来读取该文档的内容和结构，也可以把修改过的内容写入XML文件